scalar Date

type User {
  name: String!
  userId: String!
  email: String!
  profilePic: String
  bio: String
  isFrozen: Boolean
  createdAt: Date!
  updatedAt: Date!
  followers: [User]
  follows: [User]
  likes: [Like]
  posts: [Post]
}

input CreateUserInput {
  name: String!
  userId: String!
  email: String!
  profilePic: String
  bio: String
  isFrozen: Boolean
}

input UpdateUserInput {
  name: String
  userId: String
  email: String
  password: String
  profilePic: String
  bio: String
  isFrozen: Boolean
  createdAt: Date
  updatedAt: Date
}

input LikeAPostInput {
  postId: String!
  userId: String!
}

type Query {
  users: [User]!
  user(id: String!): User
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: String!): User
  likeAPost(likeAPostInput: LikeAPostInput!): Post
}
